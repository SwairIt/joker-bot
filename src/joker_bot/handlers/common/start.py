from aiogram import Router, types, F
from aiogram.filters import CommandStart, or_f

from filters.chat_types import ChatTypeFilter

from kbds.inline import jokes_kbd
from kbds.reply import start_kbd


router = Router()

router.message.filter(ChatTypeFilter(["private"]))


@router.message(CommandStart())
async def start_cmd(message: types.Message):
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê–Ω–µ–∫–¥–æ—Ç –ú–∞—Å—Ç–µ—Ä! –í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é üòú", reply_markup=start_kbd())


@router.message(F.text == "–ê–Ω–µ–∫–¥–æ—Ç—ã")
async def jokes_cmd(message: types.Message):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å üòÄ', reply_markup=jokes_kbd())


@router.message(F.text == "–û –±–æ—Ç–µ")
async def about(message: types.Message):
    await message.answer('–õ—É—á—à–∏–π –±–æ—Ç üòÄ\n<b><i>by @HiL1ne</i></b>')


@router.callback_query(or_f(F.data == "white_joke", F.data == "black_joke", F.data == "top_jokes"))
async def joke_cmd(callback: types.CallbackQuery):

    await callback.answer()
    await callback.message.answer(f"–Ø –∑–∞–¥–æ–ª–±–∞–ª—Å—è —ç—Ç—É —Ñ–∏–≥–Ω—é –¥–µ–ª–∞—Ç—å! üò≠")


# @router.callback_query(F.data == "jokes")
# async def jokes(callback: types.CallbackQuery):
#     await callback.answer('–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø—É–Ω–∫—Ç "–∞–Ω–µ–∫–¥–æ—Ç—ã"')
#     await callback.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å üòÄ", reply_markup=jokes_kbd())